name: Docker

on:
  push:
    branches:
      - master

jobs:
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    strategy:
      matrix:
        PYTHON_VERSION: [3.8.2]
        UBUNTU_VERSION: [18.04]
    env:
      IMAGE_NAME: cpython
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
      UBUNTU_VERSION: ${{ matrix.UBUNTU_VERSION }}
      VERSION: ${{ matrix.PYTHON_VERSION }}_${{ matrix.UBUNTU_VERSION }}

    steps:
      - uses: jungwinter/split@v1
          id: python
          with:
            msg: ${{ env.PYTHON_VERSION }}
            seperator: '.'

      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --tag richarddally/${{ env.IMAGE_NAME }}:${{ env.VERSION }} --build-arg PYTHON_MAJOR=${{ steps.split.outputs._0 }} --build-arg PYTHON_MINOR=${{ steps.split.outputs._1 }} --build-arg PYTHON_MICRO=${{ steps.split.outputs._2 }}

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          echo IMAGE_ID=$IMAGE_ID
          echo ${{ env.VERSION }}

          docker tag image $IMAGE_ID:${{ env.VERSION }}
          docker push $IMAGE_ID:${{ env.VERSION }}
